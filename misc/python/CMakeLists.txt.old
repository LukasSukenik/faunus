# convenience variables
set(src_dir ${CMAKE_CURRENT_SOURCE_DIR})
set(generated_source ${src_dir}/faunus_generated.cpp)

# TODO: will this be possible?
# when this _really_ should be done:
# - generator.py changes - works
# - some of the headers change - will do later (IMPLICIT_DEPENDS?)
#
# problem: also runs during first build in a dir, even if source is up-to-date

# the generator executable
add_executable(generator IMPORTED)
set_target_properties(generator PROPERTIES IMPORTED_LOCATION ${src_dir}/generator.py)

# create a custom command, run as decided by dependencies
add_custom_command(OUTPUT ${generated_source}
                   COMMAND generator
                   COMMAND touch ${generated_source}
                   WORKING_DIRECTORY ${src_dir}
                   DEPENDS generator
                   IMPLICIT_DEPENDS ${generated_source} # does not work
                  )

# the generated file is C++
set_source_files_properties(${generated_source} PROPERTIES LANGUAGE CXX)

# some more include directories
include_directories(${PROJECT_SOURCE_DIR}/include
                    ${PYTHON_INCLUDE_PATH}
                    ${Boost_INCLUDE_DIRS})

# library locations
link_directories(${Boost_LIBRARY_DIRS})

# create python module target
add_library(python MODULE ${generated_source})
set_target_properties(python PROPERTIES PREFIX ""
                                        OUTPUT_NAME faunus)
target_link_libraries(python
                      ${Boost_LIBRARIES}
                      libfaunus)


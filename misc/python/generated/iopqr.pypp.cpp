// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generated/generated_header.h"
#include "iopqr.pypp.hpp"

namespace bp = boost::python;

struct iopqr_wrapper : Faunus::iopqr, bp::wrapper< Faunus::iopqr > {

    iopqr_wrapper(Faunus::iopqr const & arg )
    : Faunus::iopqr( arg )
      , bp::wrapper< Faunus::iopqr >(){
        // copy constructor
        
    }

    iopqr_wrapper( )
    : Faunus::iopqr( )
      , bp::wrapper< Faunus::iopqr >(){
        // null constructor
    
    }

    virtual bool save( ::std::string arg0, ::std::vector< Faunus::particle > & arg1 ) {
        if( bp::override func_save = this->get_override( "save" ) )
            return func_save( arg0, boost::ref(arg1) );
        else
            return this->Faunus::iopqr::save( arg0, boost::ref(arg1) );
    }
    
    
    bool default_save( ::std::string arg0, ::std::vector< Faunus::particle > & arg1 ) {
        return Faunus::iopqr::save( arg0, boost::ref(arg1) );
    }

};

void register_iopqr_class(){

    bp::class_< iopqr_wrapper >( "iopqr", bp::init< >() )    
        .def( 
            "save"
            , (bool ( ::Faunus::iopqr::* )( ::std::string,::std::vector< Faunus::particle > & ) )(&::Faunus::iopqr::save)
            , (bool ( iopqr_wrapper::* )( ::std::string,::std::vector< Faunus::particle > & ) )(&iopqr_wrapper::default_save)
            , ( bp::arg("arg0"), bp::arg("arg1") ) )    
        .def( 
            "save"
            , (bool ( ::Faunus::iopqr::* )( ::std::string,::std::vector< Faunus::particle > &,::Faunus::titrate & ) )( &::Faunus::iopqr::save )
            , ( bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2") ) );

}

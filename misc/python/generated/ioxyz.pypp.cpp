// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generated/generated_header.h"
#include "ioxyz.pypp.hpp"

namespace bp = boost::python;

struct ioxyz_wrapper : Faunus::ioxyz, bp::wrapper< Faunus::ioxyz > {

    ioxyz_wrapper(Faunus::ioxyz const & arg )
    : Faunus::ioxyz( arg )
      , bp::wrapper< Faunus::ioxyz >(){
        // copy constructor
        
    }

    ioxyz_wrapper( )
    : Faunus::ioxyz( )
      , bp::wrapper< Faunus::ioxyz >(){
        // null constructor
    
    }

    virtual ::std::vector< Faunus::particle > load( ::std::string arg0 ) {
        if( bp::override func_load = this->get_override( "load" ) )
            return func_load( arg0 );
        else
            return this->Faunus::ioxyz::load( arg0 );
    }
    
    
    ::std::vector< Faunus::particle > default_load( ::std::string arg0 ) {
        return Faunus::ioxyz::load( arg0 );
    }

    virtual bool save( ::std::string arg0, ::std::vector< Faunus::particle > & arg1 ) {
        if( bp::override func_save = this->get_override( "save" ) )
            return func_save( arg0, boost::ref(arg1) );
        else
            return this->Faunus::ioxyz::save( arg0, boost::ref(arg1) );
    }
    
    
    bool default_save( ::std::string arg0, ::std::vector< Faunus::particle > & arg1 ) {
        return Faunus::ioxyz::save( arg0, boost::ref(arg1) );
    }

};

void register_ioxyz_class(){

    bp::class_< ioxyz_wrapper >( "ioxyz", bp::init< >() )    
        .def( 
            "load"
            , (::std::vector< Faunus::particle > ( ::Faunus::ioxyz::* )( ::std::string ) )(&::Faunus::ioxyz::load)
            , (::std::vector< Faunus::particle > ( ioxyz_wrapper::* )( ::std::string ) )(&ioxyz_wrapper::default_load)
            , ( bp::arg("arg0") ) )    
        .def( 
            "save"
            , (bool ( ::Faunus::ioxyz::* )( ::std::string,::std::vector< Faunus::particle > & ) )(&::Faunus::ioxyz::save)
            , (bool ( ioxyz_wrapper::* )( ::std::string,::std::vector< Faunus::particle > & ) )(&ioxyz_wrapper::default_save)
            , ( bp::arg("arg0"), bp::arg("arg1") ) );

}

// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generated/generated_header.h"
#include "spherical.pypp.hpp"

namespace bp = boost::python;

void register_spherical_class(){

    { //::Faunus::spherical
        typedef bp::class_< Faunus::spherical, boost::noncopyable > spherical_exposer_t;
        spherical_exposer_t spherical_exposer = spherical_exposer_t( "spherical", bp::init< bp::optional< double, double, double > >(( bp::arg("arg0")=0, bp::arg("arg1")=0, bp::arg("arg2")=0 )) );
        bp::scope spherical_scope( spherical_exposer );
        { //::Faunus::spherical::cartesian
        
            typedef ::Faunus::point ( ::Faunus::spherical::*cartesian_function_type )(  ) ;
            
            spherical_exposer.def( 
                "cartesian"
                , cartesian_function_type( &::Faunus::spherical::cartesian ) );
        
        }
        { //::Faunus::spherical::operator=
        
            typedef void ( ::Faunus::spherical::*assign_function_type )( ::Faunus::point & ) ;
            
            spherical_exposer.def( 
                "assign"
                , assign_function_type( &::Faunus::spherical::operator= )
                , ( bp::arg("p") ) );
        
        }
        { //::Faunus::spherical::random_angles
        
            typedef void ( ::Faunus::spherical::*random_angles_function_type )(  ) ;
            
            spherical_exposer.def( 
                "random_angles"
                , random_angles_function_type( &::Faunus::spherical::random_angles ) );
        
        }
        spherical_exposer.def_readwrite( "phi", &Faunus::spherical::phi );
        spherical_exposer.def_readwrite( "r", &Faunus::spherical::r );
        spherical_exposer.def_readwrite( "theta", &Faunus::spherical::theta );
    }

}

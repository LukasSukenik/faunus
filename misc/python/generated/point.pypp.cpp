// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generated/generated_header.h"
#include "point.pypp.hpp"

namespace bp = boost::python;

void register_point_class(){

    bp::class_< Faunus::point >( "point", bp::init< >() )    
        .def( bp::init< double, double, double >(( bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2") )) )    
        .def( 
            "clear"
            , (void ( ::Faunus::point::* )(  ) )( &::Faunus::point::clear ) )    
        .def( 
            "dist"
            , (double ( ::Faunus::point::* )( ::Faunus::point const & ) const)( &::Faunus::point::dist )
            , ( bp::arg("p") ) )    
        .def( 
            "dist"
            , (double ( ::Faunus::point::* )( ::Faunus::point const &,double const &,double const & ) const)( &::Faunus::point::dist )
            , ( bp::arg("p"), bp::arg("len"), bp::arg("halflen") ) )    
        .def( 
            "dot"
            , (double ( ::Faunus::point::* )( ::Faunus::point const & ) const)( &::Faunus::point::dot )
            , ( bp::arg("arg0") ) )    
        .def( 
            "len"
            , (double ( ::Faunus::point::* )(  ) const)( &::Faunus::point::len ) )    
        .def( bp::self * bp::self )    
        .def( bp::self * bp::other< double >() )    
        .def( bp::self + bp::self )    
        .def( bp::self + bp::other< double >() )    
        .def( bp::self += bp::self )    
        .def( -bp::self )    
        .def( bp::self - bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "ranunit"
            , (void ( ::Faunus::point::* )( ::Faunus::random & ) )( &::Faunus::point::ranunit )
            , ( bp::arg("arg0") ) )    
        .def( 
            "sqdist"
            , (double ( ::Faunus::point::* )( ::Faunus::point const & ) const)( &::Faunus::point::sqdist )
            , ( bp::arg("p") ) )    
        .def( 
            "sqdist"
            , (double ( ::Faunus::point::* )( ::Faunus::point const &,double const &,double const & ) const)( &::Faunus::point::sqdist )
            , ( bp::arg("p"), bp::arg("len"), bp::arg("halflen") ) )    
        .def( 
            "str"
            , (::std::string ( ::Faunus::point::* )(  ) )( &::Faunus::point::str ) )    
        .def_readwrite( "x", &Faunus::point::x )    
        .def_readwrite( "y", &Faunus::point::y )    
        .def_readwrite( "z", &Faunus::point::z );

}

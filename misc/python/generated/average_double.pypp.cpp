// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generated/generated_header.h"
#include "average_double.pypp.hpp"

namespace bp = boost::python;

struct average_less__double__greater__wrapper : Faunus::average< double >, bp::wrapper< Faunus::average< double > > {

    average_less__double__greater__wrapper(Faunus::average<double> const & arg )
    : Faunus::average<double>( arg )
      , bp::wrapper< Faunus::average< double > >(){
        // copy constructor
        
    }

    average_less__double__greater__wrapper( )
    : Faunus::average<double>( )
      , bp::wrapper< Faunus::average< double > >(){
        // null constructor
    
    }

    virtual void add( double x ) {
        if( bp::override func_add = this->get_override( "add" ) )
            func_add( x );
        else
            this->Faunus::average< double >::add( x );
    }
    
    
    void default_add( double x ) {
        Faunus::average< double >::add( x );
    }

};

void register_average_double_class(){

    bp::class_< average_less__double__greater__wrapper >( "average_double", bp::init< >() )    
        .def( 
            "add"
            , (void ( ::Faunus::average<double>::* )( double ) )(&::Faunus::average< double >::add)
            , (void ( average_less__double__greater__wrapper::* )( double ) )(&average_less__double__greater__wrapper::default_add)
            , ( bp::arg("x") ) )    
        .def( 
            "avg"
            , (double ( ::Faunus::average<double>::* )(  ) )( &::Faunus::average< double >::avg ) )    
        .def( bp::self + bp::self )    
        .def( bp::self += bp::other< double >() )    
        .def( bp::self == bp::self )    
        .def( 
            "reset"
            , (void ( ::Faunus::average<double>::* )(  ) )( &::Faunus::average< double >::reset ) )    
        .def( 
            "rms"
            , (double ( ::Faunus::average<double>::* )(  ) )( &::Faunus::average< double >::rms ) )    
        .def( 
            "stdev"
            , (double ( ::Faunus::average<double>::* )(  ) )( &::Faunus::average< double >::stdev ) )    
        .def_readwrite( "cnt", &Faunus::average< double >::cnt )    
        .def_readwrite( "sum", &Faunus::average< double >::sum );

}

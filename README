***************************************************************************
  Faunus -- A Framework for Molecular Modelling 
  Copyright (C) 2002-2009 Mikael Lund 

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or 
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
***************************************************************************

WELCOME TO FAUNUS:
  Faunus is a C++ class library for creating programs
  for Monte Carlo simulation of molecular systems.

  Get the latest code resivions via SVN from sourceforge.net:
  $ svn co http://faunus.svn.sourceforge.net/svnroot/faunus/trunk faunus

  Website: http://faunus.sourceforge.net

CONTRIBUTORS:
  Mikael Lund        <mikael.lund at teokem.lu.se> - http://web.mac.com/mlund
  Bjorn Persson      <bjorn.persson at teokem.lu.se>
  Martin Trulsson    <martin.trulsson at teokem.lu.se>
  Ondrej Marsalek    <ondrej.marsalek at uochb.cas.cz>
  Christophe Labbez  <christophe.labbez at u-bourgogne.fr>

CITING FAUNUS:
  Lund, M., Persson, B., Trulsson, M. (2008) Source Code Biol. Med. 3:1
  http://www.scfbm.org/content/3/1/1 (free full text)

REQUIREMENTS:
  - C++ compiler (gnu, ibm, intel, sun etc.)
  Optional:
  - cmake 2.6 (for cross platform compilation)
  - Boost python (for python module)
  - Gromacs (for xtc trajectory output)
  - OpenBabel 2 (numerous molecular formats)
  - Doxygen (for code manual)
  - Graphviz (for code manual)

  Tested on Linux, MacOSX.

COMPILING USING CMAKE (RECOMMENDED):
  Menu based setup:
  $ ccmake .
  $ make [help]

  Or text based:
  $ cmake . [options]

  Options:
    -DENABLE_OPENMP=on|off   Enable OpenMP support
    -DENABLE_GROMACS=on|off  Enable Gromacs XTC file support
    -DENABLE_PYTHON=on|off   Enable python support (experimental)
    -DENABLE_FORTRAN=on|off  Compile legacy fortran programs
    -DENABLE_BABEL=on|off    Use OpenBabel for file I/O

  Example for Intel's C++ compiler with OpenMP parallization:
    $ CXX=icpc cmake . -DENABLE_OPENMP=on
    $ make

COMPILING WITHOUT CMAKE:
  $ mv Makefile.nocmake Makefile
  $ make

  Edit the Makefile to specify compiler, openmp etc.

PYTHON SUPPORT (EXPERIMENTAL):
  Classes from Faunus can be accessed via Python, provided that
  the python module is compiled (requires boost python). Build with:

  $ cmake . -DENABLE_PYTHON=on
  $ make pyfaunus

  Include misc/python in PYTHONPATH and access Faunus
  via "import faunus".

DIRECTORY LAYOUT:
  src          Sourcecode and examples
  include      Header files
  legacy       Older programs. FORTRAN programs are also placed here.
  undone       Unfinished code
  misc         Miscellaneous
  doc          Code documentation (auto generated)

#!/bin/bash

# THIS RUN SCRIPT IS USED AS A UNIT TEST SO PLEASE
# DO NOT UPLOAD ANY MODIFIED VERSIONS TO SVN UNLESS
# TO UPDATE THE TEST.

source_tests_dir="`dirname $0`"
cp -f $source_tests_dir/polymers.test . 2> /dev/null
cp -f $source_tests_dir/polymers.state state 2> /dev/null

#-----------------------------------------------------------
# Create input file with atom properties
#-----------------------------------------------------------
echo '{

  // dp = Displacement parameter [angstrom]
  // q  = Valency/charge number [e]
  // r  = Radius [angstrom]

  "atomlist" : {
    "Na" : { "q": 1.0, "r":2.0, "dp":110, "Ninit":0  },  // sodium ion
    "Cl" : { "q":-1.0, "r":2.0, "dp":110, "Ninit":32 },  // chloride ion
    "MM" : { "q": 1.0, "r":3.0, "dp":10 }                // monomer
  },

  "moleculelist" : {
    "salt" : { "atoms":"Na Cl", "atomic":true, "Ninit":1 },

    "polymer" :
    {
      "structure":"polymers.aam", "Ninit":8,
      "bonds" : {
        "0 1" : { "type":"harmonic", "k":0.0557, "req":0.0 }, // kT/AA^2, AA
        "1 2" : { "type":"harmonic", "k":0.0557, "req":0.0 },
        "2 3" : { "type":"harmonic", "k":0.0557, "req":0.0 }
      }
    }
  },

  "hamiltonian" : {
    "nonbonded" : {}
  },

  "moves" : {
    "atomtranslate" : {
      "salt"    : { "prop":1.0, "peratom":true },
      "polymer" : { "prop":1.0, "permol":true, "peratom":true }
    },
    "moltransrot" : {
      "polymer" : { "dp":50, "dprot":6, "permol":true, "dir":"1 1 1" } 
    },
    "crankshaft" : {
      "polymer" : { "dp":6.3, "minlen":2, "maxlen":10, "permol":true }
    },
    "pivot" : {
      "polymer" : { "dp":6.3, "minlen":1, "maxlen":1000, "permol":true }
    },
    "isobaric" : { "dp":2, "pressure":113.2, "prop":0.1 }
  },

  "general" : {
    "cuboid"       : { "len" : 200. },
    "sphere"       : { "radius" : 100. },
    "coulomb"      : { "epsr" : 78.7 },
    "mcloop"       : { "macro":10, "micro":20000 },
    "unittest"     : { "testfile":"polymers.test", "stable":false },
    "atomlist"     : "polymers.json",
    "moleculelist" : "polymers.json"
  }
}' > polymers.json

#-----------------------------------------------------------
# Create user input file
#-----------------------------------------------------------
echo "
qmin                   0.25
qmax                   4.0
dq                     0.01
" > polymers.input

#-----------------------------------------------------------
# Make file with molecule of four atoms
#-----------------------------------------------------------
echo "4
 MM  0   0.00   0.00   0.00    1.0   1  3.0
 MM  1   7.60   0.00   0.00    1.0   1  3.0
 MM  2   0.00   7.60   0.00    1.0   1  3.0
 MM  3   7.60   7.60   0.00    1.0   1  3.0
" > polymers.aam

#-----------------------------------------------------------
# Run simulation
#-----------------------------------------------------------
exe=./polymers
if [ -x $exe ]; then
  $exe
  rc=$?
  #rm -f confout.gro polymers.input polymers.aam polymers.atoms
  exit $rc
fi
exit 1

